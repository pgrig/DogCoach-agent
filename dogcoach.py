import streamlit as st
from langchain.agents import Tool, AgentExecutor, create_react_agent
from langchain_openai import ChatOpenAI
from langchain.prompts import PromptTemplate
from langchain.tools import tool
import json
import os
from dotenv import load_dotenv

# Завантаження змінних середовища (для API ключів)
load_dotenv()

# База даних порід собак (спрощена)
DOG_BREEDS_DB = {
    "німецька вівчарка": {
        "traits": "Розумна, віддана, впевнена, сміливa",
        "trainability": "Висока",
        "energy_level": "Висока",
        "best_for": "Захист, послух, пошук і рятування",
        "challenges": "Потребує ранньої соціалізації та постійної стимуляції розуму"
    },
    "лабрадор": {
        "traits": "Дружній, товариський, слухняний, енергійний",
        "trainability": "Висока",
        "energy_level": "Висока",
        "best_for": "Апортування, послух, терапія, пошук і рятування",
        "challenges": "Може бути занадто енергійним, схильний до переїдання"
    },
    "чихуахуа": {
        "traits": "Сміливий, відданий, енергійний, пильний",
        "trainability": "Середня",
        "energy_level": "Середня",
        "best_for": "Трюки, базовий послух",
        "challenges": "Може бути впертим, схильний до гавкання"
    },
    "джек-рассел тер'єр": {
        "traits": "Енергійний, розумний, незалежний, відважний",
        "trainability": "Середня до високої",
        "energy_level": "Дуже висока",
        "best_for": "Аджиліті, трюки, полювання",
        "challenges": "Дуже високий рівень енергії, потребує фізичної та розумової стимуляції"
    },
    "золотистий ретривер": {
        "traits": "Дружній, відданий, розумний, терплячий",
        "trainability": "Висока",
        "energy_level": "Середня до високої",
        "best_for": "Послух, апортування, терапія, порятунок",
        "challenges": "Потребує регулярних фізичних вправ та соціалізації"
    },
    "бігль": {
        "traits": "Дружній, допитливий, веселий, відданий",
        "trainability": "Середня",
        "energy_level": "Висока",
        "best_for": "Нюхові ігри, трекінг, базовий послух",
        "challenges": "Впертий, легко відволікається запахами"
    },
    "пудель": {
        "traits": "Розумний, активний, гордий, тренований",
        "trainability": "Висока",
        "energy_level": "Середня до високої",
        "best_for": "Послух, трюки, аджиліті",
        "challenges": "Може нудьгувати без розумової стимуляції"
    },
    "шпіц": {
        "traits": "Відданий, пильний, енергійний, розумний",
        "trainability": "Середня",
        "energy_level": "Середня до високої",
        "best_for": "Компаньйон, сторож, базовий послух",
        "challenges": "Може бути гавкливим та впертим"
    },
    "мопс": {
        "traits": "Грайливий, чарівний, товариський, впертий",
        "trainability": "Середня до низької",
        "energy_level": "Низька до середньої",
        "best_for": "Базові команди, трюки",
        "challenges": "Швидко втомлюється, може бути впертим"
    },
    "хаскі": {
        "traits": "Дружній, допитливий, енергійний, незалежний",
        "trainability": "Середня",
        "energy_level": "Дуже висока",
        "best_for": "Витривалі вправи, тягові види спорту",
        "challenges": "Дуже незалежний, потребує багато фізичної активності"
    }
}

# Вікові рекомендації з тренування
AGE_TRAINING_GUIDE = {
    "щеня (2-6 місяців)": {
        "focus": "Базові команди, соціалізація, привчання до туалету",
        "session_length": "5-10 хвилин",
        "frequency": "Кілька коротких сесій на день",
        "approaches": "Позитивне підкріплення, гра, терпіння"
    },
    "підліток (6-18 місяців)": {
        "focus": "Закріплення базових команд, послух, контроль імпульсів",
        "session_length": "15-20 хвилин",
        "frequency": "1-2 рази на день",
        "approaches": "Послідовність, ясні межі, більше викликів"
    },
    "дорослий (1.5-7 років)": {
        "focus": "Складніші команди, трюки, спеціальні навички",
        "session_length": "20-30 хвилин",
        "frequency": "Регулярно для підтримки навичок",
        "approaches": "Різноманітні методи, поступове ускладнення"
    },
    "старший (7+ років)": {
        "focus": "Підтримка існуючих навичок, м'які вправи",
        "session_length": "10-15 хвилин",
        "frequency": "Регулярно, але з урахуванням енергії",
        "approaches": "Терпіння, адаптація до фізичних обмежень"
    }
}

# Рекомендації по характеру
TEMPERAMENT_GUIDE = {
    "енергійний": {
        "approaches": "Багато фізичної активності перед тренуванням, різноманітні вправи",
        "challenges": "Може легко відволікатися, потрібен контроль імпульсів",
        "tips": "Починайте тренування після фізичної активності, використовуйте високоцінні винагороди"
    },
    "спокійний": {
        "approaches": "Стабільний темп, уникайте надмірної стимуляції",
        "challenges": "Може здаватися незацікавленим, повільно реагує",
        "tips": "Будьте терплячими, використовуйте м'який тон, уникайте монотонності"
    },
    "боязкий": {
        "approaches": "Поступове знайомство з новими стимулами, тихе середовище",
        "challenges": "Легко лякається, може 'заморожуватися' від страху",
        "tips": "Тренуйтеся в безпечному середовищі, уникайте покарань, використовуйте десенсибілізацію"
    },
    "впертий": {
        "approaches": "Послідовність, цікаві стимули, коротші сесії",
        "challenges": "Може ігнорувати команди, тестує межі",
        "tips": "Знайдіть правильну мотивацію, будьте послідовними, тренуйтеся перед годуванням"
    },
    "розумний": {
        "approaches": "Розумові виклики, різноманітність, складні трюки",
        "challenges": "Швидко нудьгує, може хитрувати",
        "tips": "Постійно ускладнюйте тренування, змінюйте рутину, використовуйте ігри для розуму"
    }
}

# Рівні тренування та відповідні техніки
TRAINING_LEVELS = {
    "початківець": {
        "focus": "Базові команди (сидіти, лежати, стояти, до мене)",
        "methods": "Приманка з ласощами, позитивне підкріплення",
        "progression": "Майстерність в тихому, знайомому середовищі"
    },
    "середній": {
        "focus": "Слухняність з відволіканнями, тривале виконання команд",
        "methods": "Змінні нагороди, додавання словесних команд, тренування в різних місцях",
        "progression": "Поступове збільшення складності та відволікань"
    },
    "просунутий": {
        "focus": "Команди на відстані, трюки, спеціалізовані навички",
        "methods": "Цільове тренування, цепочки команд, тренування без повідка",
        "progression": "Послідовність у різних ситуаціях і середовищах"
    }
}

# Специфічні тренувальні цілі
TRAINING_GOALS = {
    "базовий послух": {
        "key_commands": "Сидіти, лежати, стояти, до мене, чекати",
        "progression": "Починайте в тихому місці, поступово додавайте відволікання",
        "tips": "Короткі, послідовні тренування, використовуйте чіткі сигнали"
    },
    "вигул на повідку": {
        "key_commands": "П'ята (поруч), спостереження, зупинка на перехрестях",
        "progression": "Починайте в тихому місці, поступово переходьте до більш відволікаючих середовищ",
        "tips": "Використовуйте високоцінні ласощі, змінюйте темп, практикуйте розвороти"
    },
    "трюки": {
        "key_commands": "Дай лапу, перекид, крутись, повзи, стрибок",
        "progression": "Один трюк за раз, використовуйте приманки, будуйте на базових командах",
        "tips": "Зробіть це грою, використовуйте знак-маркер, відзначайте навіть маленький прогрес"
    },
    "соціалізація": {
        "key_commands": "Спокійне привітання, ігнорування, контроль імпульсів",
        "progression": "Почніть з однієї спокійної людини/собаки, поступово збільшуйте знайомства",
        "tips": "Використовуйте нагороду за спокійну поведінку, коротке позитивне знайомство"
    },
    "припинення гавкання": {
        "key_commands": "Тихо, залишайся, перемикання уваги",
        "progression": "Визначте тригери, працюйте під порогом реакції, поступово наближайтеся до тригерів",
        "tips": "Уникайте підкріплення гавкання увагою, винагороджуйте тишу, використовуйте перемикання активності"
    }
}

# Інструменти для агента

@tool
def get_breed_info(breed: str) -> str:
    """Отримує інформацію про породу собаки."""
    breed = breed.lower()
    if breed in DOG_BREEDS_DB:
        info = DOG_BREEDS_DB[breed]
        return json.dumps(info, ensure_ascii=False)
    
    # Якщо точне співпадіння не знайдено, шукаємо часткові співпадіння
    for known_breed in DOG_BREEDS_DB:
        if breed in known_breed or known_breed in breed:
            info = DOG_BREEDS_DB[known_breed]
            return f"Найближче співпадіння: {known_breed}\n{json.dumps(info, ensure_ascii=False)}"
    
    return "Інформація про цю породу не знайдена в базі даних. Надам загальні рекомендації."

@tool
def get_age_training_recommendations(age_group: str) -> str:
    """Отримує рекомендації з тренування, базуючись на віковій групі собаки."""
    age_group = age_group.lower()
    
    for key in AGE_TRAINING_GUIDE:
        if key in age_group or age_group in key:
            return json.dumps(AGE_TRAINING_GUIDE[key], ensure_ascii=False)
    
    return "Не вдалося визначити вікову групу. Виберіть з: щеня (2-6 місяців), підліток (6-18 місяців), дорослий (1.5-7 років), старший (7+ років)"

@tool
def get_temperament_advice(temperament: str) -> str:
    """Отримує рекомендації по тренуванню, базуючись на характері собаки."""
    temperament = temperament.lower()
    
    for key in TEMPERAMENT_GUIDE:
        if key in temperament or temperament in key:
            return json.dumps(TEMPERAMENT_GUIDE[key], ensure_ascii=False)
    
    return "Не вдалося визначити тип характеру. Виберіть з: енергійний, спокійний, боязкий, впертий, розумний"

@tool
def get_training_level_guidance(level: str) -> str:
    """Отримує рекомендації відповідно до рівня тренованості собаки."""
    level = level.lower()
    
    for key in TRAINING_LEVELS:
        if key in level or level in key:
            return json.dumps(TRAINING_LEVELS[key], ensure_ascii=False)
    
    return "Не вдалося визначити рівень тренування. Виберіть з: початківець, середній, просунутий"

@tool
def get_training_goal_recommendations(goal: str) -> str:
    """Отримує рекомендації для досягнення конкретної мети тренування."""
    goal = goal.lower()
    
    for key in TRAINING_GOALS:
        if key in goal or goal in key:
            return json.dumps(TRAINING_GOALS[key], ensure_ascii=False)
    
    return "Конкретні рекомендації для цієї мети відсутні. Загальні підходи: послідовність, позитивне підкріплення, поступове ускладнення."

@tool
def create_personalized_training_plan(breed: str, age: str, temperament: str, goal: str, level: str) -> str:
    """Створює персоналізований план тренування на основі всіх параметрів собаки."""
    
    breed_info = get_breed_info(breed)
    age_info = get_age_training_recommendations(age)
    temperament_info = get_temperament_advice(temperament)
    level_info = get_training_level_guidance(level)
    goal_info = get_training_goal_recommendations(goal)
    
    return f"""
ІНФОРМАЦІЯ ПРО СОБАКУ:
Порода: {breed}
{breed_info}

ВІКОВІ РЕКОМЕНДАЦІЇ:
{age_info}

ПІДХІД ДО ХАРАКТЕРУ:
{temperament_info}

РІВЕНЬ ТРЕНУВАННЯ:
{level_info}

РЕКОМЕНДАЦІЇ ДЛЯ МЕТИ "{goal}":
{goal_info}
"""

# Створення інструментів
tools = [
    get_breed_info,
    get_age_training_recommendations,
    get_temperament_advice,
    get_training_level_guidance,
    get_training_goal_recommendations,
    create_personalized_training_plan
]

# Системний промпт для DogCoach
system_prompt = """Ти DogCoach - експертна система з дресирування собак.
Твоя мета - надавати персоналізовані поради для тренування собак на основі їх породи, віку, характеру, бажаних цілей тренування та поточного рівня дресури.

Коли користувач надає інформацію про свого собаку, аналізуй її та створюй детальний план тренування.
Використовуй доступні інструменти для отримання специфічної інформації про породу, вікові особливості, підходи до різних типів характеру, рівні тренування та стратегії для різних цілей тренування.

Твої рекомендації мають бути:
1. Науково обґрунтованими та використовувати методи позитивного підкріплення
2. Адаптованими під конкретного собаку
3. Практичними і зрозумілими для господаря
4. Структурованими у зручний план дій

Завжди враховуй як фізичні, так і розумові потреби собаки. Рекомендації мають відповідати віку та фізичним можливостям тварини.
"""

# Створення агента
llm = ChatOpenAI(temperature=0.2)
prompt = PromptTemplate.from_template(system_prompt)
agent = create_react_agent(llm, tools, prompt)
agent_executor = AgentExecutor(agent=agent, tools=tools, verbose=True)

# Streamlit інтерфейс
st.title("🐕 DogCoach - Ваш персональний тренер собак")
st.write("Заповніть анкету про вашого собаку, щоб отримати персоналізований план тренування")

# Форма для введення інформації про собаку
with st.form("dog_info_form"):
    col1, col2 = st.columns(2)
    
    with col1:
        dog_breed = st.text_input("Порода собаки", placeholder="Наприклад: Німецька вівчарка")
        dog_age = st.selectbox("Вікова група", 
                              ["Щеня (2-6 місяців)", "Підліток (6-18 місяців)", 
                               "Дорослий (1.5-7 років)", "Старший (7+ років)"])
        dog_temperament = st.selectbox("Характер собаки", 
                                     ["Енергійний", "Спокійний", "Боязкий", "Впертий", "Розумний"])
    
    with col2:
        training_goal = st.selectbox("Мета тренування", 
                                    ["Базовий послух", "Вигул на повідку", 
                                     "Трюки", "Соціалізація", "Припинення гавкання"])
        training_level = st.selectbox("Поточний рівень дресури", 
                                     ["Початківець", "Середній", "Просунутий"])
        
        additional_info = st.text_area("Додаткова інформація (необов'язково)", 
                                      placeholder="Особливості поведінки, проблеми, специфічні цілі")
    
    submit_button = st.form_submit_button("Отримати план тренування")

# Обробка даних форми
if submit_button:
    if not dog_breed:
        st.error("Будь ласка, вкажіть породу вашої собаки")
    else:
        with st.spinner("Створюю персоналізований план тренування..."):
            # Підготовка запиту для агента
            query = f"""
            Створи персоналізований план тренування для собаки:
            Порода: {dog_breed}
            Вік: {dog_age}
            Характер: {dog_temperament}
            Мета тренування: {training_goal}
            Рівень дресури: {training_level}
            Додаткова інформація: {additional_info}
            
            Надай детальний, структурований план з конкретними вправами, частотою тренувань та очікуваним прогресом.
            """
            
            # Виклик агента
            response = agent_executor.invoke({"input": query})
            
            # Відображення результату
            st.subheader("Ваш персоналізований план тренування")
            st.markdown(response["output"])
            
            # Додавання корисних ресурсів
            st.subheader("Корисні ресурси")
            st.markdown("""
            - [Відео: Базові команди для собак](https://www.youtube.com/results?search_query=basic+dog+training)
            - [Книга: "Не рвіть повідок" Патрісії МакКоннелл](https://www.amazon.com/Dont-Shoot-Dog-Teaching-Training/dp/0553380397)
            - [Тренувальне обладнання для собак](https://www.amazon.com/s?k=dog+training+equipment)
            """)

# Додаткова інформація
st.sidebar.title("Про DogCoach")
st.sidebar.write("""
DogCoach - це система на базі штучного інтелекту, яка надає персоналізовані рекомендації 
для тренування собак. Система враховує породу, вік, характер, цілі тренування та поточний рівень дресури.

Наші рекомендації базуються на сучасних методах позитивного підкріплення та розуміння поведінки собак.
""")

st.sidebar.title("Методика")
st.sidebar.write("""
Ми використовуємо підходи, що ґрунтуються на:
- Позитивному підкріпленні
- Науковому розумінні поведінки собак
- Врахуванні особливостей різних порід
- Адаптації до індивідуальних особливостей кожної собаки
""")

# Показуємо приклади різних порід
st.sidebar.title("Підтримувані породи")
st.sidebar.write(", ".join(DOG_BREEDS_DB.keys())) 